{"version":3,"file":"IteratorContainer-legacy-Dkok3ezX.js","sources":["../../../../../../packages/ui/src/iterator-container/src/IteratorContainer.vue"],"sourcesContent":["<template>\n  <div class=\"magic-ui-iterator-container\">\n    <Container v-for=\"(item, index) in configs\" :key=\"index\" :config=\"item\"></Container>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue';\n\nimport { type DisplayCond, type MContainer, NodeType } from '@tmagic/schema';\nimport { useApp } from '@tmagic/vue-runtime-help';\n\nimport Container from '../../container';\n\nconst props = withDefaults(\n  defineProps<{\n    config: MContainer & {\n      type: 'iterator-container';\n      iteratorData: any[];\n      dsField: string[];\n      itemConfig: {\n        layout: string;\n        displayConds: DisplayCond[];\n        style: Record<string, string | number>;\n      };\n    };\n    model?: any;\n  }>(),\n  {\n    model: () => ({}),\n  },\n);\n\nconst { app } = useApp({\n  config: props.config,\n  methods: {},\n});\n\nconst configs = computed(() => {\n  let { iteratorData = [] } = props.config;\n\n  if (!Array.isArray(iteratorData)) {\n    iteratorData = [];\n  }\n\n  if (app?.platform === 'editor' && !iteratorData.length) {\n    iteratorData.push({});\n  }\n\n  return iteratorData.map((itemData) => {\n    const condResult =\n      app?.platform !== 'editor'\n        ? app?.dataSourceManager?.compliedIteratorItemConds(itemData, props.config.itemConfig.displayConds) ?? true\n        : true;\n\n    return {\n      items:\n        app?.dataSourceManager?.compliedIteratorItems(itemData, props.config.items, props.config.dsField) ??\n        props.config.items,\n      id: '',\n      type: NodeType.CONTAINER,\n      condResult,\n      style: {\n        ...props.config.itemConfig.style,\n        position: 'relative',\n        left: 0,\n        top: 0,\n      },\n    };\n  });\n});\n</script>\n"],"names":["props","__props","app","useApp","config","methods","configs","Vue","iteratorData","Array","isArray","platform","length","push","map","itemData","condResult","dataSourceManager","compliedIteratorItemConds","itemConfig","displayConds","items","compliedIteratorItems","dsField","id","type","NodeType","CONTAINER","style","position","left","top"],"mappings":"qcAcA,MAAAA,EAAAC,GAmBAC,IAAAA,GAAAC,EAAA,CAAuBC,OAAAJ,EAAAI,OACPC,QAAA,CAAA,IAIhBC,EAAgBC,mBACd,IAAAC,aAAAA,EAAA,IAAAR,EAAAI,OAUA,OARAK,MAAAC,QAAAF,KACEA,EAAA,IAGF,WAAAN,GAAAS,UAAAH,EAAAI,QACEJ,EAAAK,KAAA,CAAA,GAGFL,EAAAM,KAAAC,IACE,MAAAC,EAAA,WAAAd,GAAAS,WAAAT,GAAAe,mBAAAC,0BAAAH,EAAAf,EAAAI,OAAAe,WAAAC,gBAAA,GAKA,MAAA,CAAOC,MAAAnB,GAAAe,mBAAAK,sBAAAP,EAAAf,EAAAI,OAAAiB,MAAArB,EAAAI,OAAAmB,UAAAvB,EAAAI,OAAAiB,MAGUG,GAAA,GACXC,KAAAC,EAAAC,UACWX,aACfY,MAAA,IACO5B,EAAAI,OAAAe,WAAAS,MACsBC,SAAA,WACjBC,KAAA,EACJC,IAAA,GAER,GACF"}